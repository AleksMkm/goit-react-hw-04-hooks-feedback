{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Section/Section.module.css","Components/Container/Container.module.css","Components/Controls/Controls.module.css","Components/Notification/Notification.module.css","Components/Container/Container.js","Components/Section/Section.js","Components/Controls/Controls.js","Components/Statistics/Statistics.js","Components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Section","title","section","Controls","options","clickHandler","map","option","feedbackType","btn","data-action","onClick","propTypes","PropTypes","arrayOf","string","isRequired","func","Statistics","good","neutral","bad","total","percent","list","item","Notification","message","notification","App","useState","setGood","setNeutral","setBad","countTotalFeedback","target","dataset","action","prevState","blur","toFixed","countPositiveFeedbackPercentage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ebc2577.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__82gxF\",\"item\":\"Statistics_item__3Eesz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2jZ0_\",\"title\":\"Section_title__2kz8E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3F0d7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Controls_btn__95CDR\",\"feedbackBtns\":\"Controls_feedbackBtns__1Bq_B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1O5t8\"};","import styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","import React from 'react';\nimport styles from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      <p className={styles.title}>{title}</p>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Controls.module.css';\n\nconst btn = ({ feedbackType, clickHandler }) => {\n  return (\n    <button\n      className={styles.btn}\n      key={feedbackType}\n      data-action={feedbackType}\n      onClick={clickHandler}\n    >\n      {feedbackType}\n    </button>\n  );\n};\n\nfunction Controls({ options, clickHandler }) {\n  return options.map(option => btn({ feedbackType: option, clickHandler }));\n}\n\nexport default Controls;\n\nControls.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  clickHandler: PropTypes.func.isRequired,\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, percent }) {\n  return (\n    <Fragment>\n      <ul className={styles.list}>\n        <li className={styles.item}>Good: {good}</li>\n        <li className={styles.item}>Neutral: {neutral}</li>\n        <li className={styles.item}>Bad: {bad}</li>\n        <li className={styles.item}>Total: {total}</li>\n        <li className={styles.item}>Positive feedback: {percent}%</li>\n      </ul>\n    </Fragment>\n  );\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  percent: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport styles from './Notification.module.css';\n\nfunction Notification({ message }) {\n  return <div className={styles.notification}>{message}</div>;\n}\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport Container from './Components/Container';\nimport Section from './Components/Section';\nimport Controls from './Components/Controls';\nimport Statistics from './Components/Statistics';\nimport Notification from './Components/Notification';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const countTotalFeedback = () => good + neutral + bad;\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    return total ? +((good / total) * 100).toFixed(0) : 0;\n  };\n\n  const handleFeedback = ({ target }) => {\n    const feedbackType = target.dataset.action;\n    switch (feedbackType) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      default:\n        break;\n    }\n    target.blur();\n  };\n\n  return (\n    <Container>\n      <Section title=\"Please leave feedback\">\n        <Controls\n          options={['good', 'neutral', 'bad']}\n          clickHandler={handleFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback() !== 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            percent={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}